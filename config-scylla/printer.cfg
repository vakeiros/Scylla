# include # This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				[gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Probe pin								[probe] section
## Fine tune E steps					[extruder] section

[include mainsail.cfg]
[include bedfans.cfg]
[include leds_effect.cfg]
#[include stealthburner_leds.cfg]

#[include KAMP_Settings.cfg]
#[include adxlpico.cfg]
[include liftbar.cfg]
[include T0.cfg]
[include T1.cfg]
[include T2.cfg]
[include T3.cfg]
[include T4.cfg]
[include T5.cfg]
[include toolchanger.cfg]
[include macros.cfg]
[include homing.cfg]
[include tool_detection.cfg]

[exclude_object]

[rounded_path]
resolution: 0.2
replace_g0: True

[force_move]
enable_force_move: True

[virtual_sdcard]
path: ~/printer_data/gcodes
[display_status]
[pause_resume]

[mcu rpi]
serial: /tmp/klipper_host_mcu

# [adxl345]
# cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    175,175,20  # an example

[input_shaper]
# shaper_freq_x: 56.6
# shaper_type_x: mzv
# shaper_freq_y: 37
# shaper_type_y: mzv

[gcode_arcs]
resolution: 0.1
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.


[mcu]
##	[X in MOTOR0] - B Motor
##	[Y in MOTOR1] - A Motor
##	[E in MOTOR6] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_28004600105053424E363620-if00
#restart_method: command
##--------------------------------------------------------------------

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 500 
max_accel: 10000    			#Max 4000
#max_accel_to_decel: 4000    			#Max 4000
max_z_velocity: 60 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on MOTOR0(B Motor)
[stepper_x]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

#	Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PF2
interpolate: false
run_current: 1.0
#hold_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0

## Y Stepper on MOTOR1 (A Motor)
[stepper_y]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: -13
##--------------------------------------------------------------------

##	Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

#	Uncomment for 350mm build
position_endstop: 345
position_max: 345

##--------------------------------------------------------------------
homing_speed: 30  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE4
interpolate: false
run_current: 1.0
#hold_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR2_1
[stepper_z]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: +1.5 
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_max: 240

##	Uncomment below for 300mm build
#position_max: 290

#	Uncomment below for 350mm build
position_max: 330

##--------------------------------------------------------------------
position_min: -10
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3


##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC4
interpolate: false
run_current: 1.0
#hold_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PD11
interpolate: false
run_current: 1.0
#hold_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on MOTOR4
[stepper_z2]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PC6
interpolate: false
run_current: 1.0
#hold_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right on MOTOR5 
[stepper_z3]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PC7
interpolate: false
run_current: 1.0
#hold_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PF3

##--------------------------------------------------------------------
## Adjust cycle time to avoid flashing lights: 0.016 60Hz mains, 0.02 50Hz mains
pwm_cycle_time: 0.02
##--------------------------------------------------------------------

##	Adjust Max Power so your heater doesn't warp your bed
max_power: 1
min_temp: 0
max_temp: 120
#control: pid
#pid_Kp=55.853 pid_Ki=2.372 pid_Kd=328.832
#pid_kp: 55.853
#pid_ki: 2.372
#pid_kd: 328.832

#####################################################################
# 	Probe
#####################################################################

[probe]
# ##	Inductive Probe 
# ##	This probe is not used for Z height, only Quad Gantry Leveling

# # Select the probe port by type:
# ## For the PROBE port; use this with the original OMRON sensor.
# #pin: ~PB7
# ## For the spare endstop port; use this with the Fotek PL-05N (or generic) inductive probe
# pin: ^EBB0:PB9
# ## For Octopus Pro Probe port; NPN and PNP proximity switch types can be set by jumper
# # pin: ^PC5

# #--------------------------------------------------------------------

# x_offset: 0
# y_offset: 0.0
# z_offset: 0
# speed: 10.0
# samples: 3
# samples_result: median
# sample_retract_dist: 3.0
# samples_tolerance: 0.02
# samples_tolerance_retries: 3

# #### TAP STUFF
# activate_gcode:
#     {% set PROBE_TEMP = 120 %}
#     {% set MAX_TEMP = PROBE_TEMP + 5 %}
#     {% set ACTUAL_TEMP = printer.extruder.temperature %}
#     {% set TARGET_TEMP = printer.extruder.target %}

#     {% if TARGET_TEMP > PROBE_TEMP %}
#         { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#         M109 S{ PROBE_TEMP }
#     {% else %}
#         # Temperature target is already low enough, but nozzle may still be too hot.
#         {% if ACTUAL_TEMP > MAX_TEMP %}
#             { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#             TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#         {% endif %}
#     {% endif %}
[include calibrate_offsets.cfg]

#####################################################################
# 	Fan Control
#####################################################################


[controller_fan controller_fan]
##	Controller fan - CNC_FAN2
pin: PA8
kick_start_time: 0.5
fan_speed: 0.5
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
idle_timeout: 60
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
idle_speed: 0.2
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater:
stepper: stepper_z
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.



#[heater_fan exhaust_fan]
##	Exhaust fan - CNC_FAN3
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
# 	LED Control
#####################################################################

# [output_pin caselight]
# # Chamber Lighting - HE1 Connector (Optional)
# pin: PA3
# pwm:true
# shutdown_value: 0
# value:0.05
# cycle_time: 0.01

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PF4

#[servo klicky_servo]
#pin: PB6
#   PWM output pin controlling the servo. This parameter must be
#   provided.
#maximum_servo_angle: 180
#   The maximum angle (in degrees) that this servo can be set to. The
#   default is 180 degrees.
#minimum_pulse_width: 0.0005
#   The minimum pulse width time (in seconds). This should correspond
#   with an angle of 0 degrees. The default is 0.001 seconds.
#maximum_pulse_width: 0.002
#   The maximum pulse width time (in seconds). This should correspond
#   with an angle of maximum_servo_angle. The default is 0.002
#   seconds.
#initial_angle:160
#   Initial angle (in degrees) to set the servo to. The default is to
#   not send any signal at startup.
#initial_pulse_width:
#   Initial pulse width time (in seconds) to set the servo to. (This
#   is only valid if initial_angle is not set.) The default is to not
#   send any signal at startup.

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 4000

# [safe_z_home] 
# ##	XY Location of the Z Endstop Switch 
# ##	Update -10,-10 to the XY coordinates of your endstop pin 
# ##	(such as 157,305) after going through Z Endstop Pin
# ##	Location Definition step.
# home_xy_position:175,175 ##231.5, 346.5
# speed:300
# z_hop:10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions 

#--------------------------------------------------------------------
##	Gantry Corners for 250mm Build
##	Uncomment for 250mm build
#gantry_corners:
#	-60,-10
#	310, 320
##	Probe points
#points:
#	50,25
#	50,175
#	200,175
#	200,25
	
##	Gantry Corners for 300mm Build
##	Uncomment for 300mm build
#gantry_corners:
#	-60,-10
#	360,370
##	Probe points
#points:
#	50,25
#	50,225
#	250,225
#	250,25

#	Gantry Corners for 350mm Build
#	Uncomment for 350mm build
gantry_corners:
	-60,-15
	410,415
##	Probe points
points:
	25,20
	25,325
	325,325
	325,20

#--------------------------------------------------------------------
speed: 450
horizontal_move_z: 20
retries: 5
retry_tolerance: 0.03
max_adjust: 20

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

#[display]
##	mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##	To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 10,10
mesh_max: 340, 335
probe_count: 5,5
adaptive_margin: 5
#relative_reference_index: 13

#####################################################################
# 	Macros
#####################################################################

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    {% set t = params.T|int %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        {% if t == 0 %}
            TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+3}
        {% else %}  
            TEMPERATURE_WAIT SENSOR=extruder{t} MINIMUM={s} MAXIMUM={s+3}   ; Wait for hotend temp (within 1 degree)
        {% endif %} 
    {% endif %}

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: QUAD_GANTRY_LEVEL_BASE
gcode:
    QUAD_GANTRY_LEVEL_BASE {rawparams}
    G28 Z

#[respond] #enables m118 echo in console

# [gcode_macro G32]
# gcode:
#     BED_MESH_CLEAR
#     G28
#     QUAD_GANTRY_LEVEL
#     G28
#     ##	Uncomment for for your size printer:
#     #--------------------------------------------------------------------
#     ##	Uncomment for 250mm build
#     #G0 X125 Y125 Z30 F3600
    
#     ##	Uncomment for 300 build
#     #G0 X150 Y150 Z30 F3600
    
#     ##	Uncomment for 350mm build
#     G0 X175 Y175 Z30 F3600
#     #--------------------------------------------------------------------
   
# [gcode_macro PRINT_START]
# gcode:        
#     # Parameters
    
#     {% set bedtemp = params.BED|int %}
#     {% set hotendtemp = params.HOTEND|int %}
#     {% set chambertemp = params.CHAMBER|default(0)|int %}     #need chamber sensor
#     LIGHTS_ON
#     STATUS_HOMING
#     G28
#     STATUS_READY
#     # <insert your routines here>
#     STATUS_HEATING
    
#     {% if chambertemp != 0 %}
#         SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110
#         TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chambertemp}   ; wait for chamber temp
#     {% endif %}
    
#       M190 S{bedtemp}                                                             ; set & wait for bed temp
    
  
#     # <insert your routines here>

#     STATUS_READY

#     QUAD_GANTRY_LEVEL

#     STATUS_MESHING
#     RESPOND MSG="Measuring bed mesh"
#     BED_MESH_CALIBRATE
#     BED_MESH_PROFILE LOAD="default"

#     STATUS_HEATING

   
#     M109 S{hotendtemp}

#      STATUS_PRINTING
#     Smart_Park
#     VORON_PURGE
   

# [gcode_macro PRINT_END]
# #   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
# gcode:
#     M400                           ; wait for buffer to clear
#     G92 E0                         ; zero the extruder
#     G1 E-10.0 F3600                ; retract filament
#     G91                            ; relative positioning
#     G0 Z25 F20000    ; move nozzle to remove stringing
#     TURN_OFF_HEATERS
#     M107                           ; turn off fan
#     G90                            ; absolute positioning
#     G0  X175 Y350 F3600            ; park nozzle at rear
#     BED_MESH_CLEAR
#     STATUS_OFF
#     LIGHTS_OFF
    
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

# [gcode_macro LIGHTS_OFF]
# gcode: SET_PIN PIN=caselight VALUE=0

# [gcode_macro LIGHTS_ON]
# gcode: SET_PIN PIN=caselight VALUE=0.05

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [tool_probe_endstop]
#*# z_offset = 0
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 54.964
#*# pid_ki = 2.562
#*# pid_kd = 294.742
